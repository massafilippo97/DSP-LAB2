openapi: 3.0.1
info:
  title: API set for the To Do Manager web app [DSP version] 
  version: "1.0"
servers:
- url: /
tags:
- name: tasks
  description: Basic operations about users' tasks
- name: assigned tasks
  description: Operations related to the assignments of tasks
- name: users
  description: Operations about user login process
- name: login
  description: Operations about user login process
paths:
  /tasks:
    get:
      tags:
      - tasks
      summary: Retrieve all the [logged user's] tasks
      operationId: tasksGET
      #parameters:
      #- name: filter
      #  in: query
      #  description: Specifies the filter value necessary to filter the list of tasks
      #  required: false
      #  style: form
      #  explode: false
      #  schema:
      #    type: array
      #    items:
      #      type: string
      #      enum:
      #      - public
      #      - assignedToMe
      #      - createdByMe
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                x-content-type: application/json
        "401":
          description: Unauthorized                
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
    post:
      tags:
      - tasks
      summary: "Add a new task (ID is automatically generated by the server and the\
        \ creator becomes its owner [assignees list is left empty])"
      operationId: tasksPOST
      requestBody:
        description: It is required a single Task object
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Task'
      responses:
        "201":
          description: Created
        "401":
          description: Unauthorized  
        "400":
          description: Bad Request ##teoricamente restituito dal middleware validator
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
  /tasks/public: 
    get:
      tags:
      - tasks
      summary: Retrieve all the public tasks
      operationId: tasksPublicGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                x-content-type: application/json
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
  /tasks/assignedToMe:
    get:
      tags:
      - tasks
      summary: Retrieve all the tasks assigned to a logged user
      operationId: tasksAssignedToMeGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                x-content-type: application/json
        "401":
          description: Unauthorized  
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
  /tasks/createdByMe:
    get:
      tags:
      - tasks
      summary: Retrieve all the tasks created by a logged user
      operationId: tasksCreatedByMeGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                x-content-type: application/json
        "401":
          description: Unauthorized  
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
  
  /tasks/{TaskId}:
    get:
      tags:
      - tasks
      summary: Retrieve the specific tasks by its ID
      operationId: tasksTaskIdGET
      parameters:
      - name: TaskId
        in: path
        description: Task id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
                x-content-type: application/json
        "401":
          description: Unauthorized  
        "403":
          description: Forbbiden  
        "404":
          description: Task not found
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
    put:
      tags:
      - tasks
      summary: "Update an existing task, identified by the specified ID (if the requester\
        \ is the owner) [completed property cannot be changed here]"
      operationId: tasksTaskIdPUT
      parameters:
      - name: TaskId
        in: path
        description: Task id to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: It is required a single Task object
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Task'
      responses:
        "204":
          description: No Content (successfully created)
        "400":
          description: Bad Request
        "401":
          description: Unauthorized  
        "403":
          description: Forbidden  
        "404":
          description: Task not found
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
    delete:
      tags:
      - tasks
      summary: Delete an existing task by ID (if the requester is the owner)
      operationId: tasksTaskIdDELETE
      parameters:
      - name: TaskId
        in: path
        description: Task id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized  
        "403":
          description: Forbbiden  
        "404":
          description: Task not found
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
  /tasks/{TaskId}/assignedTo:
    get:
      tags:
      - assigned tasks
      summary: Retrieve the list of all the assignes of that task
      operationId: tasksTaskIdAssignedToGET
      parameters:
      - name: TaskId
        in: path
        description: Task id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
        "401":
          description: Unauthorized
        "404":
          description: Task Not Found
        "503":
          description: Internal Server Error
      x-swagger-router-controller: AssignedTasks
  /tasks/{TaskId}/assignedTo/{UserId}:
    put:
      tags:
      - assigned tasks
      summary: "Assign an [already existing] user to the assignees user list of that\
        \ task"
      operationId: tasksTaskIdAssignedToUserIdPUT
      parameters:
      - name: TaskId
        in: path
        description: Task id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: UserId
        in: path
        description: User id to update inside the assigned user list
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content (successfully created)
        "400":
          description: Bad Request
        "401":
          description: Unauthorized  
        "403":
          description: Forbbiden  
        "404":
          description: Task/User not found
        "503":
          description: Internal Server Error
      x-swagger-router-controller: AssignedTasks
    delete:
      tags:
      - assigned tasks
      summary: Remove an user from the assignees user list of that task
      operationId: tasksTaskIdAssignedToUserIdDELETE
      parameters:
      - name: TaskId
        in: path
        description: Task id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: UserId
        in: path
        description: User id to remove inside the assignees user list
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized  
        "403":
          description: Forbbiden  
        "404":
          description: Task not found
        "503":
          description: Internal Server Error
      x-swagger-router-controller: AssignedTasks
  /tasks/{TaskId}/markTask:
    put:
      tags:
      - tasks
      summary: Change the specified Task's status as completed (or not?)
      operationId: tasksTaskIdMarkTaskPUT
      parameters:
      - name: TaskId
        in: path
        description: Task id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content (successfully created)
        "400":
          description: Bad Request
        "401":
          description: Unauthorized  
        "403":
          description: Forbbiden  
        "404":
          description: Task not found
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
  /users/{UserId}:
    get:
      tags:
      - users
      summary: Retrieve all the public tasks
      operationId: usersUserIdGET
      parameters:
      - name: UserId
        in: path
        description: User id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
        "401":
          description: Unauthorized       
        "404":
          description: User Not Found
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Tasks
  /login:
    post:
      tags:
      - login
      summary: Perform the login process
      operationId: loginPOST
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "503":
          description: Internal Server Error
      x-swagger-router-controller: Login
    #delete:
    #  tags:
    #  - login
    #  summary: Perform the logout process
    #  operationId: loginDELETE
    #  responses:
    #    "204":
    #      description: No Content
    #    "404":
    #      description: Task not found
    #    "503":
    #      description: Internal Server Error
    #  x-swagger-router-controller: Login
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        password:
          maximum: 20
          minimum: 6
          type: string
      example:
        password: password
        name: name
        id: id
        email: ""
    Task:
      required:
      - description
      - id
      type: object
      properties:
        id:
          type: number
        description:
          maxLength: 160
          type: string
        important:
          type: number
          default: 0
          minimum: 0
          maximum: 1
        private:
          type: number
          default: 1
          minimum: 0
          maximum: 1
        projects:
          type: string
          enum:
          - Personal
          - WA1_Project
          - WA2_Project
          - DSP_Project
        deadline:
          pattern: "([0-9][0-9][2-9][0-9])"
          type: string
          format: date-time
        completed:
          type: number
          default: 0
          minimum: 0
          maximum: 1
        owner:
          type: number 
        links:
          type: array
          items:
            type: string
      example:
        id: 1
        description: a very detailed description
        important: 0
        private: 1
        projects: "Personal"
        deadline: 2000-01-23T04:56:07.000+00:00 
        completed: 0
        owner: 2
        